#!/bin/sh
### ref: https://github.com/NeuroAI-HD/HD-GLIO

root_dir=/mnt/hdd3/mskim/GBL/data/$2 
input_dir=${root_dir}/nifti_raw
# resized_bhk
target_dir=${root_dir}/no_hd_glio
mkdir -p ${target_dir}
echo "processing subjects under:" ${input_dir}

### renaming t1, t1ce, t2, flair into 0000, 0001, 0002, 0003 following HD-GLIO convention ###
# if [ $1 -eq 1 ]; then
if [ $1 = '--input_dir' ]; then

	TotalStartTime=$(date +%s)

	for subj in $(ls -l ${input_dir}|grep ^d|awk '{print $9}') 
		do
		  	if [ -e ${input_dir}/$subj/t1.nii.gz ] && [ -e ${input_dir}/$subj/t2.nii.gz ] && [ -e ${input_dir}/$subj/t1ce.nii.gz ] && [ -e ${input_dir}/$subj/flair.nii.gz ]; then
				echo "all sequences exist:" $subj
				SubjStartTime=$(date +%s)

				echo "preprocess started for" ${subj}
				mkdir -p ${target_dir}/${subj}
				cd ${target_dir}/${subj}
				pwd

				echo "renaming for hd_glio preprocess" $subj
				cp ${input_dir}/${subj}/t1.nii.gz T1.nii.gz 
				cp ${input_dir}/${subj}/t1ce.nii.gz CT1.nii.gz
				cp ${input_dir}/${subj}/t2.nii.gz T2.nii.gz
				cp ${input_dir}/${subj}/flair.nii.gz FLAIR.nii.gz
				
				wait

				echo "reorienting" $subj
				fslreorient2std T1.nii.gz T1_reorient.nii.gz
				fslreorient2std CT1.nii.gz CT1_reorient.nii.gz
				fslreorient2std T2.nii.gz T2_reorient.nii.gz
				fslreorient2std FLAIR.nii.gz FLAIR_reorient.nii.gz
				wait

				echo "run hd bet" $subj 
				hd-bet -i T1_reorient.nii.gz -o t1_bet.nii.gz -device 1 
				hd-bet -i CT1_reorient.nii.gz -o ct1_bet.nii.gz -s 1 -device 1 # -s: save mask if 1
				hd-bet -i T2_reorient.nii.gz -o t2_bet.nii.gz -device 1
				hd-bet -i FLAIR_reorient.nii.gz -o flair_bet.nii.gz -device 1
				wait

				echo "register brain extracted images to ct1" $subj
				# register brain extracted images to t1, save matrix
				flirt -in t1_bet.nii.gz -out t1_bet_reg.nii.gz -ref ct1_bet.nii.gz -omat t1_to_ct1.mat -interp spline -dof 6 &
				flirt -in t2_bet.nii.gz -out t2_bet_reg.nii.gz -ref ct1_bet.nii.gz -omat t2_to_ct1.mat -interp spline -dof 6 &
				flirt -in flair_bet.nii.gz -out flair_bet_reg.nii.gz -ref ct1_bet.nii.gz -omat flair_to_ct1.mat -interp spline -dof 6 &
				wait

				echo "applying transformation matrix" $subj
				# now apply the transformation matrices to the original images (pre hd-bet)
				flirt -in T1_reorient.nii.gz -out t1_reg.nii.gz -ref ct1_bet.nii.gz -applyxfm -init t1_to_ct1.mat -interp spline &
				flirt -in T2_reorient.nii.gz -out t2_reg.nii.gz -ref ct1_bet.nii.gz -applyxfm -init t2_to_ct1.mat -interp spline &
				flirt -in FLAIR_reorient.nii.gz -out flair_reg.nii.gz -ref ct1_bet.nii.gz -applyxfm -init flair_to_ct1.mat -interp spline &
				wait

				echo "applying t1 brain mask" $subj
				# now apply t1 brain mask to all registered images
				fslmaths t1_reg.nii.gz -mas ct1_bet_mask.nii.gz T1_reorient_reg_bet.nii.gz & # t1_bet_mask.nii.gz was generated by hd-bet (see above)
				fslmaths t2_reg.nii.gz -mas ct1_bet_mask.nii.gz T2_reorient_reg_bet.nii.gz & # t1_bet_mask.nii.gz was generated by hd-bet (see above)
				fslmaths flair_reg.nii.gz -mas ct1_bet_mask.nii.gz FLAIR_reorient_reg_bet.nii.gz & # t1_bet_mask.nii.gz was generated by hd-bet (see above)
				wait

				echo "renaming for hd_glio_predict" ${subj}
				mv ct1_bet.nii.gz t1ce.nii.gz
				mv T1_reorient_reg_bet.nii.gz t1.nii.gz
				mv T2_reorient_reg_bet.nii.gz t2.nii.gz
				mv FLAIR_reorient_reg_bet.nii.gz flair.nii.gz
				wait

				SubjEndTime=$(date +%s)
				SubjElapsedTime=`echo "$SubjEndTime - $SubjStartTime" | bc`
				htime=`echo "$SubjElapsedTime/3600" | bc`
				mtime=`echo "($SubjElapsedTime/60) - ($htime * 60)" | bc`
				stime=`echo "$SubjElapsedTime - (($SubjElapsedTime/60) * 60)" | bc`
				echo "Total time: ${htime} H ${mtime} M ${stime} S"
			fi
		done
	
	### reporting 
	TotalEndTime=$(date +%s)
	TotalElapsedTime=`echo "$TotalEndTime - $TotalStartTime" | bc`
	htime=`echo "$TotalElapsedTime/3600" | bc`
	mtime=`echo "($TotalElapsedTime/60) - ($htime * 60)" | bc`
	stime=`echo "$TotalElapsedTime - (($TotalElapsedTime/60) * 60)" | bc`

	NUM_SUBJ=$(ls -l ${target_dir}|grep ^d|wc -l)
	echo "Completing hd_glio for ${NUM_SUBJ}"
	echo "Total time: ${htime} H ${mtime} M ${stime} S"
fi
